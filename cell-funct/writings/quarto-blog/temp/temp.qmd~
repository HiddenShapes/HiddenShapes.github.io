---
title: Functors between cellular automata
subtitle: or CA with CT
author: Leonard Hardiman
format:
  html:
    fontsize: 1.3em
    toc: true
    toc-location: left
    theme:
      light: cosmo
      dark: cyborg
    css: custom.css
    page-layout: full
include-before-body: header.html
include-in-header: latexFunctions.md
---

# Abstract

$\com{[todo]}$

# Setup

## Cellular automata
Let $S$ be a non-empty finite set of states and let $G$ be an non-empty graph. A *Cellular Automaton* (CA) on $(G,S)$ is a function,
$$\de \colon S^{V} \rightarrow S^{V}.$$
We call an element of $S^{V}$ a *configuration*, and call this function the *transition function*, it describes the dynamics of the automaton, mapping the current configuration (state of each vertex) to the next configuration. 

Obviously, $\de$ should be constrained by $G$, in some way. But, for now, one of the good/bad things is that everything works for an arbitrary $\de \in \End(S^{V})$. Here is a list of properties that $\delta$ will have that probably should be brought into the story:

* translation invariance (requires elements of $G$ to have coordinates),
* the notion of a "dead" cell; CA decomposition?
* local rules.


## Bringing in category theory

For a given cellular automata $(G,S,\de)$, we consider a cateogry $\bC$ defined as follows. 

* $\Obj(\bC) = S^{V}$
* $\Hom(a,b) = \{n \in \bN \mid \de^n(a)=b \}.$

A nice feature of this construction is that composition is simply given by addition. In particular, the identity map is given by $0 \colon a \to a$, we denote this map  $\id \in \End(a)$.   

We note that the $\Hom$-spaces have a fairly particular structure; for $a$ and $b$ be such that $\Hom(a,b) \neq \emptyset$ there exists $k, l \in \bN$ such that
$$
\Hom(a,b) = 
\begin{cases}
\{ k \} & \text{if neither $a$ nor $b$ are recurrent.}\\
\{k + n\cdot l \mid n \in \bN\} &\text{else.}
\end{cases}
$$
Our real object of interest is the 2-category $\Cell$  of such categories (i.e. categories that arise from cellular automata). In particular, we ask the following explorative question: can we construct a non-trivial functor $F \colon \bC_1 \to \bC_2 \ $? An initial challenge in answering this question is finding the right characterisation of "trivial". This is the objective of the next section.

## Zero CA

$\com{[todo]}$

# Trivial Functors

To recall a functor $F\colon \bC_1 \to \bC_2$ would consist of the following data,

* a map on configurations $F \colon \Obj(\bC_1) \to \Obj(\bC_2)$,
* a map on morphisms $F \colon \Hom(a,b) \to \Hom(F(a),F(b))$ such that $F(\alpha + \beta) = F(\alpha) + F(\beta)$. 

From now on, we will always assume that this map is the identity (an assumption which implies that $\Hom(a,b) = \Hom(F(a),F(b)), \ \forall a,b$).^[It would be perfectly possible to forgo this assumption, the cellular interpretation perhaps being some kind of "time dilation" (which could be very not trivial, depending upon the source and target configurations).]

As we have fixed the behaviour of the functor on morphisms, any mapping $F\colon \Obj(\bG) \to \Obj(\bC)$ provides a candidate functor, which gives rise to a genuine functor if the following diagram is satisfied, 

<div style="display: flex; justify-content: center;">
<div style="margin-right: 120px;">
<img id="myImage" src="./img/tikz/cd1.svg" style="width: 220%;">
</div>
</div>

<script>
    // Get the image
    var img = document.getElementById('myImage');

    // Check if the dark theme is currently active
    if (document.body.classList.contains('dark-theme')) {
        img.style.filter = 'invert(1)';
    } else {
        img.style.filter = 'invert(0)';
    }

    // Listen for changes to the body's class list
    var observer = new MutationObserver(function() {
        if (document.body.classList.contains('dark-theme')) {
            img.style.filter = 'invert(1)';
        } else {
            img.style.filter = 'invert(0)';
        }
    });

    // Start observing
    observer.observe(document.body, { attributes: true, attributeFilter: ['class'] });
</script>


Therefore, to represent these functors in a engaging way, we'll present dynamic illustrations of this commutation at work, in the following style.

<div id="canvasContainer">
<div class="canvas-wrapper" id="wrapper4">
<canvas id="canvas4" width="200" height="200"></canvas>
</div>
<div class="canvas-wrapper" id="wrapper1">
<canvas id="canvas1" width="200" height="200"></canvas>
</div>
<div class="canvas-wrapper" id="wrapper5">
<canvas id="canvas5" width="200" height="200"></canvas>
</div>
<div class="canvas-wrapper" id="wrapper3">
<div class="overlay-container">
<canvas id="canvas3" width="200" height="200"></canvas>
<canvas id="canvas2" width="200" height="200"></canvas>
</div>
</div>
</div>
<div class="buttonContainer">
<button id="playButton">Play/Pause</button>
</div>

Here the black arrows represent an increment in time (i.e.\ a morphism in $\bC$) and the red arrows represent the functor in question. You can click on the diagram to increment all the CAs by one (you could think of each of the pictures being moved to the left), or you can simply press the play/pause button to toggle the passage of time on and off. Also the bottom right CA is in fact an overlay of two separate semi-transparent CAs, the first being calculated by incrementing the bottom left CA, and the second by applying the functor to the top right CA. Therefore, the fact that this overlay appears as a single unified CA testifies to the fact that the red arrow represent a functor.

Of course, this presentation is hard to parse without knowing the functor depicted. In this case, the functor should be considered trivial and serves principally to illustrate that trivial functors don't necessarily appear so. We recommend finishing this section before attempting the following exercise. 

**Exercise.** Determine the functor $F$ depicted in the diagram above.

## Formal trivial functors

## Isomorphisms

## Projection / Deformation retracts

## Equivalences

Duxere Peleus cornum. Promissa esse, duo qua caput vertice *lacrimantia* cadit,
*tot loquaci dato*, miseram illud in petiere? *Et sagitta caro* una ullis
pudoris, negata reposcunt timore, quid utque posses. Meum his latebras artes
trepidamque cupiens, *debere ore* venti plena et imber nam, sed. Patriaque
iussis.

    if (kbps_dhcp_bps(38, desktop_clipboard_nanometer - modemGnuHalf, applet)) {
        mini /= ppi_desktop - networking_gigabyte.data(meme_snow);
        wave(mouse_pup_php, icann, icq(2, regular_art));
        nonMedia += camelcase_graphic_data;
    } else {
        extranet(serial, perlRgb);
        jsf(risc.snippetMac(ocr_language, 3), kernel - 5);
    }
    if (3 != 4) {
        ssd = 743548 + jreRuntimeImage;
        oemJsf += multiEdutainmentWebsite(archie + qbe);
    }
    if (e_mac_mpeg + sku) {
        opticalSpeakers *= 1;
        cdfsHalftone.ctp_java_pci = gamma_ntfs(dslam, nic);
    } else {
        thunderboltUddiRuntime(aixCompile, python_ascii(pci_esports,
                deprecated), guid);
    }
    var upsSpreadsheetSystem = root_registry_website.touchscreen_reader(rgb_cdfs
            * ctr_device + graphics_python_dvr);
    if (standbyAclHorse.vector_technology_client(peoplewareSlashdot(tiff_cd_p,
            hostBare(46), speedKilohertz), ocr)) {
        model.tiffClean = throughput_reader(sharewareParty.basic_ocr(1,
                bing_executable, ide), 4);
        hyper_pcb = 4;
        bug = 3;
    }

Visura vera hasta natura in proceres precor carinae tela, nutu hoc nos crimina
suem ponere **dicitur**, nulli! Nec lamina tethys ut **amictu scopulis forma**,
deficiunt prosunt probavit? Animos quod Marsya altera; quae, sagittas [in minima
unam](http://exsecrantiavariatis.org/) sacros ornabant lunaria, mens *nec*.
Alcyonae illa, praestantia inbelle pervigilem: aliquid ero mihi lugubris in
foret. Aside tutum aut mentis?
